{
  "hash": "3a572eeb16b7e47d1c87ad04562b6dbb",
  "result": {
    "markdown": "---\ntitle: \"Introduction to GRASS GIS\"\n#subtitle: \"Create beautiful interactive slide decks with Reveal.js\"\nauthor: \"Veronica Andreo\"\ndate: '2023-02-05'\nformat:\n  revealjs: \n    slide-number: true\n    chalkboard: \n      buttons: true\n    preview-links: auto\n    logo: assets/img/grass_gis.svg\n    #theme: assets/css/theme_slides.scss\n    #css: assets/css/xarigan-themer.css\n    footer: <https://grass.osgeo.org>\n    footnotes-hover: true\nresources:\n  - demo.pdf\nfrom: markdown+emoji\n---\n\n\n## Which GRASS?\n\n::: columns\n::: {.column width=\"65%\" style=\"font-size: 0.8em\"}\n-   **GRASS GIS** (Geographic Resources Analysis Support System), a FOSS suite used for geospatial data management and analysis, image processing, graphics and maps, spatial modeling, and visualization.\n\n-   Originally developed by the U.S. Army Construction Engineering Research Laboratories for land management and environmental planning (1982-1995).\n\n-   More history: <https://grass.osgeo.org/about/history/>\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"35%\"}\n![](assets/img/grass_38_bday.png)\n:::\n:::\n\n---\n\n## A bit of (geek) GRASS GIS history...\n\n<iframe width=\"560\" height=\"315\" scrolling=\"no\" src=\"//av.tib.eu/player/12963\" frameborder=\"0\" allowfullscreen></iframe>\n\n<br>\n\nIn case you didn't notice, the video is narrated by William Shatner :rocket:\n\n---\n\n## GRASS GIS general stuff\n\n-   Free and open source, you can use, modify, improve, share\n-   Strong user community, commercial support\n-   Large amount of tools: 500+ [core modules](#modules), 300+ [addons](#addons)\n-   GUI and CLI interfaces\n-   Python API and libraries - new `grass.jupyter` library can be tried [online](https://mybinder.org/v2/gh/OSGeo/grass/c173461?urlpath=lab%2Ftree%2Fdoc%2Fnotebooks%2Fgrass_jupyter.ipynb)\n-   Connection with R, QGIS, WPS, etc.\n-   Different data types supported: [raster](https://grass.osgeo.org/grass-stable/manuals/rasterintro.html) (including [satellite imagery](https://grass.osgeo.org/grass-stable/manuals/imageryintro.html)), [3D raster or voxel](https://grass.osgeo.org/grass-stable/manuals/raster3dintro.html), [vector](https://grass.osgeo.org/grass-stable/manuals/vectorintro.html) and [space-time datasets](https://grass.osgeo.org/grass-stable/manuals/temporalintro.html)\n\n---\n\n### More than [500 core modules](https://grass.osgeo.org/grass-stable/manuals/full_index.html) <i class=\"fa-brands fa-github\"></i>\n\n| Prefix                                                                   | Function class | Type of command         | Example                                                                                                                |\n|----------------|:-------------|:-------------|:----------------------------|\n| [g.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#g)   | general        | general data management | [g.rename](https://grass.osgeo.org/grass-stable/manuals/g.rename.html): renames map                                    |\n| [d.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#d)   | display        | graphical output        | [d.rast](https://grass.osgeo.org/grass-stable/manuals/d.rast.html): display raster map                                 |\n| [r.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r)   | raster         | raster processing       | [r.mapcalc](https://grass.osgeo.org/grass-stable/manuals/r.mapcalc.html): map algebra                                  |\n| [v.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r)   | vector         | vector processing       | [v.clean](https://grass.osgeo.org/grass-stable/manuals/v.clean.html): topological cleaning                             |\n| [i.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#i)   | imagery        | imagery processing      | [i.pca](https://grass.osgeo.org/grass-stable/manuals/i.pca.html): Principal Component Analysis                         |\n| [r3.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r3) | voxel          | 3D raster processing    | [r3.stats](https://grass.osgeo.org/grass-stable/manuals/r3.stats.html): voxel statistics                               |\n| [db.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#db) | database       | database management     | [db.select](https://grass.osgeo.org/grass-stable/manuals/db.select.html): select value(s) from table                   |\n| [ps.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#ps) | postscript     | PostScript map creation | [ps.map](https://grass.osgeo.org/grass-stable/manuals/ps.map.html): PostScript map creation                            |\n| [t.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#t)   | temporal       | space-time datasets     | [t.rast.aggregate](https://grass.osgeo.org/grass-stable/manuals/t.rast.aggregate.html): raster time series aggregation |\n\n---\n\n## More than [300 add-ons](https://grass.osgeo.org/grass-stable/manuals/addons/)\n\nPlugins or **Add-ons** can be installed from a centralized [OSGeo repository](https://grass.osgeo.org/grass-stable/manuals/addons/) or from github (or similar repositories) using [g.extension](https://grass.osgeo.org/grass-stable/manuals/g.extension.html) command.\n\n``` bash\n# install extension from GRASS GIS Add-on repository\ng.extension extension=r.hants\n \n# install extension from github repository\ng.extension extension=r3.slice \\\n  url=https://github.com/petrasovaa/r3.slice\n```\n\n---\n\n### Graphical User Interface (GUI)\n\n<center><img src=\"assets/img/GUI_description.png\" width=\"870px\"/></center>\n\n---\n\n### Command line\n\n<center><img src=\"assets/img/grass_command_line.png\" width=\"65%\"/></center>\n\n---\n\n### GRASS + R through rgrass package\n\nWe can use [R within a GRASS GIS session](https://grasswiki.osgeo.org/wiki/R_statistics/rgrass7#R_within_GRASS) or use [GRASS GIS within an R session](https://grasswiki.osgeo.org/wiki/R_statistics/rgrass7#GRASS_within_R)\n\n![](assets/img/RwithinGRASS_and_Rstudio_from_grass.png)\n\n\n{{< fa brands r-project >}}\n\n\n\n---\n\n# Temporal support in GRASS GIS\n\n---\n\n## The TGRASS framework\n\nGRASS GIS was the first FOSS GIS that incorporated capabilities to *manage, analyze, process and visualize spatio-temporal data*, as well as the temporal relationships among time series.\n\n-   TGRASS is fully **based on metadata** and does not duplicate any dataset\n-   **Snapshot** approach, i.e., adds time stamps to maps\n-   A collection of time stamped maps (snapshots) of the same variable are called **space-time datasets** or STDS\n-   Maps in a STDS can have different spatial and temporal extents\n\n---\n\n## Space-time datasets\n\n-   Space time raster datasets (**STRDS**)\n-   Space time 3D raster datasets (**STR3DS**)\n-   Space time vector datasets (**STVDS**)\n\n<br> \n\n{{< fa announcement >}} Upcoming GRASS 8 will support image collections by adding a band reference\n\n---\n\n<img src=\"assets/img/temporal_modules.png\" width=\"110%\" align=\"center\"/>\n\n## Temporal modules\n\n-   **t.\\***: General modules to handle STDS of all types\n-   **t.rast.\\***: Modules that deal with STRDS\n-   **t.rast3d.\\***: Modules that deal with STR3DS\n-   **t.vect.\\***: Modules that deal with STVDS\n\n---\n\n### Other TGRASS notions\n\n---\n\n-   Time can be defined as **intervals** (start and end time) or **instances** (only start time)\n-   Time can be **absolute** (e.g., 2017-04-06 22:39:49) or **relative** (e.g., 4 years, 90 days)\n-   **Granularity** is the greatest common divisor of the temporal extents (and possible gaps) of all maps in the space-time cube\n\n<img src=\"https://grass.osgeo.org/grass78/manuals/timeline_2D.jpg\"/>\n\n---\n\n-   **Topology** refers to temporal relations between time intervals in a STDS.\n\n<img src=\"assets/img/temp_relation.png\"/>\n\n---\n\n### TGRASS framework and workflow\n\n<img src=\"assets/img/tgrass_flowchart.png\" width=\"91%\"/>\n\n---\n\n## Walk through space-time analysis for disease ecology with GRASS GIS and :r-project:\n\n---\n\n### Demo session overview\n\nHabitat suitability mapping for the Asian tiger mosquito in Northern Italy based on variables derived from daily LST data\n\n-   **GRASS**\n    -   Import species records\n    -   Create random background points\n    -   Create different environmental layers from daily LST data\n-   **R**\n    -   Read data from GRASS into R\n    -   Model species distribution\n    -   Model evaluation\n    -   Visualization of results\n\n---\n\nJarnevich et al. 2015. doi:[10.1016/j.ecoinf.2015.06.007](https://doi.org/10.1016/j.ecoinf.2015.06.007)\n\n<img src=\"assets/img/sdm_workflow_edited.png\" width=\"72%\"/>\n\n---\n\n### Data for the session\n\n-   Records of *Aedes albopictus* (Asian tiger mosquito) in Northern Italy downloaded from [GBIF](https://www.gbif.org/)\n-   Daily MODIS LST reconstructed by [mundialis](https://www.mundialis.de/en/) based on [Metz et al. 2017](https://www.mdpi.com/2072-4292/9/12/1333/htm)\n    -   1 km spatial resolution\n    -   Converted to Celsius degrees\n\n<img src=\"assets/img/aedes_albopictus.jpg\" width=\"47%\" align=\"right\"/> <br> <img src=\"assets/img/lst_north_italy_2014.png\" width=\"78%\" align=\"left\"/>\n\n---\n\n### :download: Get sample location, mosquito records and code :download:\n\n-   Create a folder named `grassdata_ogh`\n-   Download and unzip [eu_laea location with LST mapset](https://drive.google.com/file/d/1z1b2NLC4Z6yzz_57RddTdRRK_gUkd7fU/view?usp=sharing) and unzip within your `grassdata_ogh` folder\n-   Download the asian tiger [mosquito occurrences](https://github.com/veroandreo/grass_opengeohub2021/raw/master/data/aedes_albopictus.gpkg) as `.gpkg` file\n-   Download the [GRASS script](https://github.com/veroandreo/grass_opengeohub2021/raw/master/code/grass_R_disease_ecology_code.sh)\n-   Download the [R script](https://github.com/veroandreo/grass_opengeohub2021/raw/master/code/grass_R_disease_ecology_code.r)\n\nThe `grassdata_ogh` folder's tree should look like this:\n\n      grassdata_ogh/\n      └── eu_laea\n          ├── italy_LST_daily\n          └── PERMANENT\n\n---\n",
    "supporting": [
      "notebook_intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}