{
  "hash": "b53a28fd11af82306467fe99f7123b9b",
  "result": {
    "markdown": "---\ntitle: \"Introduction to GRASS GIS\"\nsubtitle: \"Basic notions, interfaces and temporal framework\"\nauthor: \"Veronica Andreo\"\ndate: '2023-03-30'\neditor: \n  markdown: \n    wrap: 80\n---\n\n\n## GRASS GIS general stuff\n\n- **GRASS GIS** (Geographic Resources Analysis Support System), a FOSS suite\nused for geospatial data management and analysis, image processing, graphics\nand maps, spatial modeling, and visualization.\n- Originally developed by the U.S. Army Construction Engineering Research\nLaboratories for land management and environmental planning (1982-1995).\n- More history: <https://grass.osgeo.org/about/history/>\n- Free and open source, you can use, modify, improve, share\n- Strong user community, commercial support\n- Large amount of tools: 500+ [core modules](#modules), 300+ [addons](#addons)\n- GUI and CLI interfaces\n- Python API and libraries - new `grass.jupyter` library can be tried\n[online](https://mybinder.org/v2/gh/OSGeo/grass/c173461?urlpath=lab%2Ftree%2Fdoc%2Fnotebooks%2Fgrass_jupyter.ipynb)\n- Connection with R, QGIS, WPS, etc.\n- Different data types supported:\n[raster](https://grass.osgeo.org/grass-stable/manuals/rasterintro.html)\n(including [satellite\nimagery](https://grass.osgeo.org/grass-stable/manuals/imageryintro.html)),\n[3D raster or\nvoxel](https://grass.osgeo.org/grass-stable/manuals/raster3dintro.html),\n[vector](https://grass.osgeo.org/grass-stable/manuals/vectorintro.html) and\n[space-time\ndatasets](https://grass.osgeo.org/grass-stable/manuals/temporalintro.html)\n\n### Open GRASS for the first time\n\nAs of version 8.0, GRASS has modified its startup to make it more user friendly:\n<br> \n<a href=\"assets/img/grass_start.png\">\n<img src=\"assets/img/grass_start.png\" title=\"First time launching GRASS 8\" alt=\"First time launching GRASS 8\" width=\"65%\"/>\n</a>\n\nFrom the **Data** catalog tab you can manage several actions and if \nyou do not yet have imported data into the GRASS database, the \nsoftware creates the directory structure or database automatically.\n\n### Database\n\n-   **GRASS database** (directory with projects): When running GRASS GIS for the\n    first time, a folder named \"grassdata\" is automatically created. Depending\n    on the operating system, it can be found in `$HOME` (\\*nix) or\n    `My Documents` (MS Windows).\n-   **Location** (a project): A location is defined by its coordinate reference\n    system (CRS). The location that is automatically created is in WGS84\n    (EPSG:4326). If you have data in another CRS, you should ideally create a\n    new location.\n-   **Mapset** (a subproject): Each location can have many mapsets to manage\n    different aspects or sub-regions of a project. When creating a new location,\n    GRASS GIS automatically creates a special mapset called *PERMANENT* where\n    the central data of the project (e.g., base maps, road network, dem, etc.)\n    can be stored.\n\n<a href=\"assets/img/grass_database.png\">\n<img src=\"assets/img/grass_database.png\" title=\"GRASS GIS database\" alt=\"GRASS GIS database\" width=\"50%\"/>\n</a>\n\n::: callout-note\nMore info: https://grass.osgeo.org/grass-stable/manuals/grass_database.html.\n:::\n\n### Computational region\n\nAnother fundamental concept of GRASS GIS (and very useful when working with\nraster data) is that of the **computational region**. It refers to the boundary\nconfiguration of the analysis area and spatial resolution (raster). The\n**computational region** can be defined and modified with the command\n[g.region](https://grass.osgeo.org/grass-stable/manuals/g.region.html) to the\nextent of a vector map, a raster or manually to some area of interest. The\n*output raster maps will have an extent and spatial resolution equal to the\ncomputational region*, while vector maps are always processed at their original\nextent.\n\n<a href=\"assets/img/region.png\">\n<img src=\"assets/img/region.png\" title=\"Computational region\" alt=\"Computational region\" width=\"50%\"/>\n</a>\n\n::: callout-note\nFor more details, see the wiki on [Computational Region]().\n:::\n\n### Modules and extensions\n\nGRASS has more than [500\nmodules](https://grass.osgeo.org/grass-stable/manuals/full_index.html) for the\nmost varied tasks:\n\n| Prefix                                                                   | Function class | Type of command         | Example                                                                                                                |\n|------------------|:--------------|:--------------|:--------------------------------|\n| [g.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#g)   | general        | general data management | [g.rename](https://grass.osgeo.org/grass-stable/manuals/g.rename.html): renames map                                    |\n| [d.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#d)   | display        | graphical output        | [d.rast](https://grass.osgeo.org/grass-stable/manuals/d.rast.html): display raster map                                 |\n| [r.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r)   | raster         | raster processing       | [r.mapcalc](https://grass.osgeo.org/grass-stable/manuals/r.mapcalc.html): map algebra                                  |\n| [v.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r)   | vector         | vector processing       | [v.clean](https://grass.osgeo.org/grass-stable/manuals/v.clean.html): topological cleaning                             |\n| [i.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#i)   | imagery        | imagery processing      | [i.pca](https://grass.osgeo.org/grass-stable/manuals/i.pca.html): Principal Components Analysis on imagery group       |\n| [r3.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r3) | voxel          | 3D raster processing    | [r3.stats](https://grass.osgeo.org/grass-stable/manuals/r3.stats.html): voxel statistics                               |\n| [db.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#db) | database       | database management     | [db.select](https://grass.osgeo.org/grass-stable/manuals/db.select.html): select value(s) from table                   |\n| [ps.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#ps) | postscript     | PostScript map creation | [ps.map](https://grass.osgeo.org/grass-stable/manuals/ps.map.html): PostScript map creation                            |\n| [t.\\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#t)   | temporal       | space-time datasets     | [t.rast.aggregate](https://grass.osgeo.org/grass-stable/manuals/t.rast.aggregate.html): raster time series aggregation |\n\nExtensions or **add-ons** can be installed from the [central GitHub\nrepository](https://grass.osgeo.org/grass-stable/manuals/addons/) or from *other\nusers' GitHub* (or similar repositories) using the command\n[g.extension](https://grass.osgeo.org/grass-stable/manuals/g.extension.html).\nFor example:\n\n``` bash\n # install an extension from the GRASS GIS repository\n g.extension extension=r.hants\n \n # install an extension from another GitHub repository\n g.extension extension=r.change.stats \\\n   url=https://github.com/mundialis/r.change.stats\n```\n\n### Graphical User Interface (GUI)\n\n<center><img src=\"assets/img/GUI_description.png\" width=\"870px\"/></center>\n\n### Command line\n\n<center><img src=\"assets/img/studio/grass_command_line.png\" width=\"65%\"/></center>\n\n### GRASS + Python\n\n### Python package `grass.script`\n\nThe **grass.script** or GRASS GIS Python Scripting Library provides functions for calling GRASS modules within Python scripts. The most commonly used functions include:\n\n- `run_command`: used when the output of the modules is a raster or vector, no text type output is expected\n- `read_command`: used when the output of the modules is of text type\n- `parse_command`: used with modules whose output can be converted to `key=value` pairs\n- `write_command`: used with modules that expect text input, either in the form of a file or from stdin\n\nIt also provides several wrapper functions for frequently used modules, for example:\n\n- To get info from a raster, script.raster.raster_info() is used: `gs.raster_info('dsm')`\n- To get info of a vector, script.vector.vector_info() is used: `gs.vector_info('roads')`\n- To list the raster in a location, script.core.list_grouped() is used: `gs.list_grouped(type=['raster'])`\n- To obtain the computational region, script.core.region() is used: `gs.region()`\n\n:::{.callout-note}\nMore info: https://grass.osgeo.org/grass-stable/manuals/libpython/script_intro.html\n:::\n\n### Python package `grass.jupyter`\n\nThe **grass.jupyter** library improves the integration of GRASS and Jupyter, and provides different classes to facilitate GRASS maps visualization:\n\n- `init`: starts a GRASS session and sets up all necessary environment variables\n- `Map`: 2D rendering\n- `Map3D`: 3D rendering\n- `InteractiveMap`: interactive visualization with folium\n- `TimeSeriesMap`: visualization for spatio-temporal data\n\n:::{.callout-note}\nMore info: https://grass.osgeo.org/grass-stable/manuals/libpython/grass.jupyter.html\n:::\n\n### GRASS + R through rgrass package\n\nWe can use [R within a GRASS GIS\nsession](https://grasswiki.osgeo.org/wiki/R_statistics/rgrass7#R_within_GRASS)\nor use [GRASS GIS within an R\nsession](https://grasswiki.osgeo.org/wiki/R_statistics/rgrass7#GRASS_within_R)\n\n![](assets/img/studio/RwithinGRASS_and_Rstudio_from_grass.png)\n\n\n{{< fa brands r-project >}}\n\n\n\n### Demo session overview\n\nHabitat suitability mapping for the Asian tiger mosquito in Northern Italy based\non variables derived from daily LST data\n\n-   **GRASS**\n    -   Import species records\n    -   Create random background points\n    -   Create different environmental layers from daily LST data\n-   **R**\n    -   Read data from GRASS into R\n    -   Model species distribution\n    -   Model evaluation\n    -   Visualization of results\n\nJarnevich et al. 2015.\ndoi:[10.1016/j.ecoinf.2015.06.007](https://doi.org/10.1016/j.ecoinf.2015.06.007)\n\n<img src=\"assets/img/studio/sdm_workflow_edited.png\" width=\"72%\"/>\n\n### Data for the session\n\n-   Records of *Aedes albopictus* (Asian tiger mosquito) in Northern Italy\n    downloaded from [GBIF](https://www.gbif.org/)\n-   Daily MODIS LST reconstructed by [mundialis](https://www.mundialis.de/en/)\n    based on [Metz et al. 2017](https://www.mdpi.com/2072-4292/9/12/1333/htm)\n    -   1 km spatial resolution\n    -   Converted to Celsius degrees\n\n<img src=\"assets/img/studio/aedes_albopictus.jpg\" width=\"47%\" align=\"right\"/> <br>\n<img src=\"assets/img/studio/lst_north_italy_2014.png\" width=\"78%\" align=\"left\"/>\n\n### Get sample location, mosquito records and code\n\n-   Create a folder named `grassdata`\n-   Download and unzip [eu_laea location with LST\n    mapset](https://drive.google.com/file/d/1z1b2NLC4Z6yzz_57RddTdRRK_gUkd7fU/view?usp=sharing)\n    and unzip within your `grassdata` folder\n-   Download the asian tiger [mosquito\n    occurrences](https://github.com/veroandreo/grass_opengeohub2021/raw/master/data/aedes_albopictus.gpkg)\n    as `.gpkg` file\n\nThe `grassdata_ogh` folder's tree should look like this:\n\n```         \n  grassdata_ogh/\n  └── eu_laea\n      ├── italy_LST_daily\n      └── PERMANENT\n```\n\n## MASK\n\n- Masks are set with [r.mask](https://grass.osgeo.org/grass76/manuals/r.mask.html) or creating a raster map called `MASK`. \n- Masks are virtual masks, they are only actually applied when reading raster maps\n- All cells that are *NULL* in the MASK map will be ignored (also all areas outside the computational region).\n- Vector maps can be also used as masks\n\n<img src=\"assets/img/masks.png\" width=\"62%\" >\n\na- Elevation raster and lakes vector maps. b- Only the raster data inside the masked area are used for further analysis. c- Inverse mask.\n\n\n### MASK examples\n\n```bash\n# use vector as mask\nr.mask vector=lakes\n\n# use vector as mask, set inverse mask\nr.mask -i vector=lakes\n\n# mask categories of a raster map\nr.mask raster=landclass96 maskcats=\"5 thru 7\"\n\n# create a raster named MASK\nr.mapcalc expression=\"MASK = if(elevation < 100, 1, null())\"\n\n# remove mask\nr.mask -r\n```\n\nMasks are only actually applied when reading a GRASS raster map, i.e., when used as input.\n\n# GRASS GIS HELP!!!\n\n- [g.manual](https://grass.osgeo.org/grass76/manuals/g.manual.html):\n  in the main GUI under Help or just pressing *F1*\n- `--help` or `--h` flag after the module name in the terminal\n- [GRASS website](https://grass.osgeo.org/): rich [learn](https://grass.osgeo.org/learn/) section with links to videos, tutorials, courses, books, etc.\n- [GRASS wiki](https://grasswiki.osgeo.org/wiki/GRASS-Wiki): examples,\n  explanations on particular modules or tasks,\n  [tutorials](https://grasswiki.osgeo.org/wiki/Category:Tutorial),\n  applications, etc.\n- grass-user mailing list: [subscribe](https://lists.osgeo.org/mailman/listinfo/grass-user) and post or check the [archives](https://lists.osgeo.org/pipermail/grass-user/)\n- Link to source code and history in each module manual page, eg., \n[t.rast.algebra](https://grass.osgeo.org/grass-stable/manuals/t.rast.algebra.html)\n\n<img src=\"assets/img/studio/source_code_link.png\" width=\"650px\">\n\n## Other (very) useful links\n\n- [GRASS intro workshop held at NCSU](https://ncsu-osgeorel.github.io/grass-intro-workshop/)\n- [Unleash the power of GRASS GIS at US-IALE 2017](https://grasswiki.osgeo.org/wiki/Unleash_the_power_of_GRASS_GIS_at_US-IALE_2017)\n- [Temporal data processing wiki](https://grasswiki.osgeo.org/wiki/Temporal_data_processing)\n- [GRASS GIS and R for time series processing wiki](https://grasswiki.osgeo.org/wiki/Temporal_data_processing/GRASS_R_raster_time_series_processing)\n- [GRASS GIS temporal workshop at NCSU](http://ncsu-geoforall-lab.github.io/grass-temporal-workshop/)\n- [GRASS GIS course in Jena](https://training.gismentors.eu/grass-gis-workshop-jena/index.html)\n- [GRASS GIS course IRSAE](http://training.gismentors.eu/grass-gis-irsae-winter-course-2018/index.html)\n- [GRASS GIS course in Argentina](https://gitlab.com/veroandreo/curso-grass-gis-rioiv)\n",
    "supporting": [
      "notebook_intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}